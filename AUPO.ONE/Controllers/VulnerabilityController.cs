using Application.Features.Vulnerability.Queries.FirstTask;
using MediatR;
using Microsoft.AspNetCore.Mvc;


namespace Wep.API.Controllers;

[ApiController]
[Route("[controller]")]
public class VulnerabilityController : ControllerBase
{
    private readonly IMediator _mediator;

    public VulnerabilityController(IMediator mediator)
    {
        _mediator = mediator ?? throw new ArgumentNullException(nameof(mediator));
    }

    [HttpPost("[action]")]
    public async Task<IActionResult> FirstTask(IFormFile file)
    {
        byte[] byteArray;

        using (var memoryStream = new MemoryStream())
        {
            file.CopyTo(memoryStream);
            byteArray = memoryStream.ToArray();
        }

        var result = await _mediator.Send(new VulnerabilityFirstTaskQuery(byteArray));
        return Ok(result);
    }

    [HttpPost("[action]")]
    public async Task<IActionResult> SecondTask(IFormFile file)
    {
        return Ok();
    }

    [HttpPost("[action]")]
    public async Task<IActionResult> ThirdTask(IFormFile file)
    {
        return Ok();
    }

    [HttpPost("[action]")]
    public async Task<IActionResult> FourTask(IFormFile file)
    {
        return Ok();
    }
}
